<?php

namespace Mrapps\CronjobBundle\Repository;

use Mrapps\CronjobBundle\Entity\CronConfigChiamata;

/**
 * CronConfigChiamataRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CronConfigChiamataRepository extends \Doctrine\ORM\EntityRepository
{
    public function getNextWeight() {
        
        $em = $this->getEntityManager();
        $maxWeight = intval($em->createQuery("
            SELECT MAX(ccc.weight)
            FROM MrappsCronjobBundle:CronConfigChiamata ccc
        ")->getSingleScalarResult());
        
        return $maxWeight+1;
    }
    
    public function editConfigChiamataForm(array $form) {
        
        $success = false;
        $message = 'Parametri non validi.';
        
        $em = $this->getEntityManager();
        
        $chiamataId = (isset($form['id'])) ? intval($form['id']) : 0;
        
        $gruppoId = (isset($form['gruppo']['value'])) ? intval($form['gruppo']['value']) : 0;
        $tipo = (isset($form['tipo']['value'])) ? $form['tipo']['value'] : '';
        $endpoint = (isset($form['endpoint'])) ? str_replace('\\', '\\\\', trim($form['endpoint'])) : '';
        $parametri = (isset($form['parametri'])) ? trim($form['parametri']) : '';
        $descrizione = (isset($form['descrizione'])) ? trim($form['descrizione']) : '';
        $maxTentativi = (isset($form['max_tentativi'])) ? intval($form['max_tentativi']) : 0;
        
        //Check campi obbligatori
        $canProceed = true;
        
        if(!in_array($tipo, CronConfigChiamata::TIPI)) {
            $canProceed = false;
            $message = 'Tipologia non valida.';
        }
        
        if($canProceed && strlen($endpoint) == 0) {
            $canProceed = false;
            $message = 'Specificare un Endpoint valido.';
        }
        
        if($canProceed && $maxTentativi < 1) {
            $canProceed = false;
            $message = 'Specificare un numero valido di tentativi massimi.';
        }
        
        if($canProceed) {
            
            /* @var $chiamata \Mrapps\CronjobBundle\Entity\CronConfigChiamata */
            $chiamata = $this->find($chiamataId);

            if($chiamata == null) {
                $chiamata = new CronConfigChiamata();
                $chiamata->setWeight($this->getNextWeight());
                $chiamata->setVisible(true);
            }
            
            $gruppo = $em->getRepository('MrappsCronjobBundle:CronConfigGruppo')->find($gruppoId);
            $chiamata->setGruppo($gruppo);
            
            $chiamata->setTipoChiamata($tipo);
            $chiamata->setEndpoint($endpoint);
            $chiamata->setParametri($parametri);
            $chiamata->setDescrizione($descrizione);
            $chiamata->setMaxTentativi($maxTentativi);
            
            $em->persist($chiamata);
            $em->flush();
            
            $chiamataId = $chiamata->getId();
            $success = true;
            $message = 'Salvato';
        }
        
        return array(
            'success' => $success,
            'message' => $message,
            'chiamata_id' => $chiamataId,
        );
    }
}
